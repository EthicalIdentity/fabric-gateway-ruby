# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: orderer/ab.proto for package 'orderer'
# Original file comments:
# Copyright the Hyperledger Fabric contributors. All rights reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

require 'grpc'
require 'orderer/ab_pb'

module Orderer
  module AtomicBroadcast
    class Service

      include ::GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'orderer.AtomicBroadcast'

      # broadcast receives a reply of Acknowledgement for each common.Envelope in order, indicating success or type of failure
      rpc :Broadcast, stream(::Common::Envelope), stream(::Orderer::BroadcastResponse)
      # deliver first requires an Envelope of type DELIVER_SEEK_INFO with Payload data as a mashaled SeekInfo message, then a stream of block replies is received.
      rpc :Deliver, stream(::Common::Envelope), stream(::Orderer::DeliverResponse)
    end

    Stub = Service.rpc_stub_class
  end
end
