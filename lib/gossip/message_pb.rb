# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gossip/message.proto

require 'peer/collection_pb'
require 'google/protobuf'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("gossip/message.proto", :syntax => :proto3) do
    add_message "gossip.Envelope" do
      optional :payload, :bytes, 1
      optional :signature, :bytes, 2
      optional :secret_envelope, :message, 3, "gossip.SecretEnvelope"
    end
    add_message "gossip.SecretEnvelope" do
      optional :payload, :bytes, 1
      optional :signature, :bytes, 2
    end
    add_message "gossip.Secret" do
      oneof :content do
        optional :internalEndpoint, :string, 1
      end
    end
    add_message "gossip.GossipMessage" do
      optional :nonce, :uint64, 1
      optional :channel, :bytes, 2
      optional :tag, :enum, 3, "gossip.GossipMessage.Tag"
      oneof :content do
        optional :alive_msg, :message, 5, "gossip.AliveMessage"
        optional :mem_req, :message, 6, "gossip.MembershipRequest"
        optional :mem_res, :message, 7, "gossip.MembershipResponse"
        optional :data_msg, :message, 8, "gossip.DataMessage"
        optional :hello, :message, 9, "gossip.GossipHello"
        optional :data_dig, :message, 10, "gossip.DataDigest"
        optional :data_req, :message, 11, "gossip.DataRequest"
        optional :data_update, :message, 12, "gossip.DataUpdate"
        optional :empty, :message, 13, "gossip.Empty"
        optional :conn, :message, 14, "gossip.ConnEstablish"
        optional :state_info, :message, 15, "gossip.StateInfo"
        optional :state_snapshot, :message, 16, "gossip.StateInfoSnapshot"
        optional :state_info_pull_req, :message, 17, "gossip.StateInfoPullRequest"
        optional :state_request, :message, 18, "gossip.RemoteStateRequest"
        optional :state_response, :message, 19, "gossip.RemoteStateResponse"
        optional :leadership_msg, :message, 20, "gossip.LeadershipMessage"
        optional :peer_identity, :message, 21, "gossip.PeerIdentity"
        optional :ack, :message, 22, "gossip.Acknowledgement"
        optional :privateReq, :message, 23, "gossip.RemotePvtDataRequest"
        optional :privateRes, :message, 24, "gossip.RemotePvtDataResponse"
        optional :private_data, :message, 25, "gossip.PrivateDataMessage"
      end
    end
    add_enum "gossip.GossipMessage.Tag" do
      value :UNDEFINED, 0
      value :EMPTY, 1
      value :ORG_ONLY, 2
      value :CHAN_ONLY, 3
      value :CHAN_AND_ORG, 4
      value :CHAN_OR_ORG, 5
    end
    add_message "gossip.StateInfo" do
      optional :timestamp, :message, 2, "gossip.PeerTime"
      optional :pki_id, :bytes, 3
      optional :channel_MAC, :bytes, 4
      optional :properties, :message, 5, "gossip.Properties"
    end
    add_message "gossip.Properties" do
      optional :ledger_height, :uint64, 1
      optional :left_channel, :bool, 2
      repeated :chaincodes, :message, 3, "gossip.Chaincode"
    end
    add_message "gossip.StateInfoSnapshot" do
      repeated :elements, :message, 1, "gossip.Envelope"
    end
    add_message "gossip.StateInfoPullRequest" do
      optional :channel_MAC, :bytes, 1
    end
    add_message "gossip.ConnEstablish" do
      optional :pki_id, :bytes, 1
      optional :identity, :bytes, 2
      optional :tls_cert_hash, :bytes, 3
      optional :probe, :bool, 4
    end
    add_message "gossip.PeerIdentity" do
      optional :pki_id, :bytes, 1
      optional :cert, :bytes, 2
      optional :metadata, :bytes, 3
    end
    add_message "gossip.DataRequest" do
      optional :nonce, :uint64, 1
      repeated :digests, :bytes, 2
      optional :msg_type, :enum, 3, "gossip.PullMsgType"
    end
    add_message "gossip.GossipHello" do
      optional :nonce, :uint64, 1
      optional :metadata, :bytes, 2
      optional :msg_type, :enum, 3, "gossip.PullMsgType"
    end
    add_message "gossip.DataUpdate" do
      optional :nonce, :uint64, 1
      repeated :data, :message, 2, "gossip.Envelope"
      optional :msg_type, :enum, 3, "gossip.PullMsgType"
    end
    add_message "gossip.DataDigest" do
      optional :nonce, :uint64, 1
      repeated :digests, :bytes, 2
      optional :msg_type, :enum, 3, "gossip.PullMsgType"
    end
    add_message "gossip.DataMessage" do
      optional :payload, :message, 1, "gossip.Payload"
    end
    add_message "gossip.PrivateDataMessage" do
      optional :payload, :message, 1, "gossip.PrivatePayload"
    end
    add_message "gossip.Payload" do
      optional :seq_num, :uint64, 1
      optional :data, :bytes, 2
      repeated :private_data, :bytes, 3
    end
    add_message "gossip.PrivatePayload" do
      optional :collection_name, :string, 1
      optional :namespace, :string, 2
      optional :tx_id, :string, 3
      optional :private_rwset, :bytes, 4
      optional :private_sim_height, :uint64, 5
      optional :collection_configs, :message, 6, "protos.CollectionConfigPackage"
    end
    add_message "gossip.AliveMessage" do
      optional :membership, :message, 1, "gossip.Member"
      optional :timestamp, :message, 2, "gossip.PeerTime"
      optional :identity, :bytes, 4
    end
    add_message "gossip.LeadershipMessage" do
      optional :pki_id, :bytes, 1
      optional :timestamp, :message, 2, "gossip.PeerTime"
      optional :is_declaration, :bool, 3
    end
    add_message "gossip.PeerTime" do
      optional :inc_num, :uint64, 1
      optional :seq_num, :uint64, 2
    end
    add_message "gossip.MembershipRequest" do
      optional :self_information, :message, 1, "gossip.Envelope"
      repeated :known, :bytes, 2
    end
    add_message "gossip.MembershipResponse" do
      repeated :alive, :message, 1, "gossip.Envelope"
      repeated :dead, :message, 2, "gossip.Envelope"
    end
    add_message "gossip.Member" do
      optional :endpoint, :string, 1
      optional :metadata, :bytes, 2
      optional :pki_id, :bytes, 3
    end
    add_message "gossip.Empty" do
    end
    add_message "gossip.RemoteStateRequest" do
      optional :start_seq_num, :uint64, 1
      optional :end_seq_num, :uint64, 2
    end
    add_message "gossip.RemoteStateResponse" do
      repeated :payloads, :message, 1, "gossip.Payload"
    end
    add_message "gossip.RemotePvtDataRequest" do
      repeated :digests, :message, 1, "gossip.PvtDataDigest"
    end
    add_message "gossip.PvtDataDigest" do
      optional :tx_id, :string, 1
      optional :namespace, :string, 2
      optional :collection, :string, 3
      optional :block_seq, :uint64, 4
      optional :seq_in_block, :uint64, 5
    end
    add_message "gossip.RemotePvtDataResponse" do
      repeated :elements, :message, 1, "gossip.PvtDataElement"
    end
    add_message "gossip.PvtDataElement" do
      optional :digest, :message, 1, "gossip.PvtDataDigest"
      repeated :payload, :bytes, 2
    end
    add_message "gossip.PvtDataPayload" do
      optional :tx_seq_in_block, :uint64, 1
      optional :payload, :bytes, 2
    end
    add_message "gossip.Acknowledgement" do
      optional :error, :string, 1
    end
    add_message "gossip.Chaincode" do
      optional :name, :string, 1
      optional :version, :string, 2
      optional :metadata, :bytes, 3
    end
    add_enum "gossip.PullMsgType" do
      value :UNDEFINED, 0
      value :BLOCK_MSG, 1
      value :IDENTITY_MSG, 2
    end
  end
end

module Gossip
  Envelope = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.Envelope").msgclass
  SecretEnvelope = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.SecretEnvelope").msgclass
  Secret = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.Secret").msgclass
  GossipMessage = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.GossipMessage").msgclass
  GossipMessage::Tag = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.GossipMessage.Tag").enummodule
  StateInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.StateInfo").msgclass
  Properties = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.Properties").msgclass
  StateInfoSnapshot = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.StateInfoSnapshot").msgclass
  StateInfoPullRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.StateInfoPullRequest").msgclass
  ConnEstablish = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.ConnEstablish").msgclass
  PeerIdentity = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.PeerIdentity").msgclass
  DataRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.DataRequest").msgclass
  GossipHello = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.GossipHello").msgclass
  DataUpdate = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.DataUpdate").msgclass
  DataDigest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.DataDigest").msgclass
  DataMessage = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.DataMessage").msgclass
  PrivateDataMessage = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.PrivateDataMessage").msgclass
  Payload = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.Payload").msgclass
  PrivatePayload = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.PrivatePayload").msgclass
  AliveMessage = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.AliveMessage").msgclass
  LeadershipMessage = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.LeadershipMessage").msgclass
  PeerTime = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.PeerTime").msgclass
  MembershipRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.MembershipRequest").msgclass
  MembershipResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.MembershipResponse").msgclass
  Member = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.Member").msgclass
  Empty = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.Empty").msgclass
  RemoteStateRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.RemoteStateRequest").msgclass
  RemoteStateResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.RemoteStateResponse").msgclass
  RemotePvtDataRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.RemotePvtDataRequest").msgclass
  PvtDataDigest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.PvtDataDigest").msgclass
  RemotePvtDataResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.RemotePvtDataResponse").msgclass
  PvtDataElement = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.PvtDataElement").msgclass
  PvtDataPayload = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.PvtDataPayload").msgclass
  Acknowledgement = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.Acknowledgement").msgclass
  Chaincode = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.Chaincode").msgclass
  PullMsgType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("gossip.PullMsgType").enummodule
end
